// Auto generated list of analyzer stop words that must be ignored by search.
stopWords = new Array();
stopWords[0]= "but";
stopWords[1]= "be";
stopWords[2]= "with";
stopWords[3]= "such";
stopWords[4]= "then";
stopWords[5]= "for";
stopWords[6]= "no";
stopWords[7]= "will";
stopWords[8]= "not";
stopWords[9]= "are";
stopWords[10]= "and";
stopWords[11]= "their";
stopWords[12]= "if";
stopWords[13]= "this";
stopWords[14]= "on";
stopWords[15]= "into";
stopWords[16]= "a";
stopWords[17]= "or";
stopWords[18]= "there";
stopWords[19]= "in";
stopWords[20]= "that";
stopWords[21]= "they";
stopWords[22]= "was";
stopWords[23]= "is";
stopWords[24]= "it";
stopWords[25]= "an";
stopWords[26]= "the";
stopWords[27]= "as";
stopWords[28]= "at";
stopWords[29]= "these";
stopWords[30]= "by";
stopWords[31]= "to";
stopWords[32]= "of";

var indexerLanguage="en";

// Auto generated index for searching.
w["1"]="8*30*2$6,9*30*3$8,10*30*3$8";
w["2"]="11*30*3$8";
w["a.1:"]="8*30*1$5";
w["again"]="8*0*e,9*0*g,10*0*g,11*0*k";
w["angry"]="3*0*p,4*0*p,5*0*p,6*0*p";
w["b"]="9*30*2$7,10*30*2$7,11*30*2$7";
w["b.1:"]="9*30*1$6,10*30*1$6";
w["b.2:"]="11*30*1$6";
w["based"]="3*0*g,4*0*g,5*0*g,6*0*g";
w["basic"]="3*0*v,4*0*v,5*0*v,6*0*v";
w["chicken"]="2*10*-1$e";
w["couisin"]="3*30*3$7,4*30*3$7,5*30*3$7,6*30*3$7";
w["countries"]="7*49*-1$0$3$7$f";
w["cuisine"]="7*10*-1$6,8*30*0$4,9*30*0$5,10*30*0$5,11*30*0$5";
w["dairy"]="2*10*-1$15";
w["diet"]="2*10*-1$9";
w["dish"]="3*2*a$f$16,4*2*a$f$16,5*2*a$f$16,6*2*a$f$16,11*0*g";
w["diverse"]="7*10*-1$d";
w["do"]="8*2*b$c$d,9*2*d$e$f,10*2*d$e$f,11*2*h$i$j";
w["eggs"]="3*1*c$18,4*1*c$18,5*1*c$18,6*1*c$18";
w["extremely"]="7*10*-1$c";
w["fats"]="2*10*-1$u";
w["fish"]="2*10*-1$f";
w["food"]="2*30*3$7";
w["food?"]="2*30*2$6";
w["france"]="1*30*0$1,7*0*g";
w["french"]="3*1*9$12,4*1*9$12,5*1*9$12,6*1*9$12,11*11*-1$c$f";
w["fresh"]="2*10*-1$i";
w["fruits"]="2*10*-1$j";
w["get"]="3*0*n,4*0*n,5*0*n,6*0*n";
w["grains"]="2*10*-1$p";

